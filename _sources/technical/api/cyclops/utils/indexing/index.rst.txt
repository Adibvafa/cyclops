:py:mod:`cyclops.utils.indexing`
================================

.. py:module:: cyclops.utils.indexing

.. autoapi-nested-parse::

   Utility functions for indexing NumPy arrays.

   ..
       !! processed by numpydoc !!


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   cyclops.utils.indexing.index_axis
   cyclops.utils.indexing.take_indices
   cyclops.utils.indexing.take_indices_over_axis



.. py:function:: index_axis(ind: int, axis: int, shape: Tuple) -> Tuple

   
   Index one value over one axis and fetch everything from all other axes.

   E.g., for ind = 3, axis = 1, and shape = (10, 20, 30), this function is
   equivalent to indexing array[:, 3, :].

   :param ind: The index in the specified axis.
   :type ind: int
   :param axis: The axis.
   :type axis: int
   :param shape: The shape of the data being indexed.
   :type shape: tuple

   :returns: A tuple which can be used to index the array.
   :rtype: tuple















   ..
       !! processed by numpydoc !!

.. py:function:: take_indices(data: numpy.ndarray, indexes: List[Optional[Union[List[int], numpy.ndarray]]]) -> numpy.ndarray

   
   Index array by specifying the indices to take on each axis.

   :param data: Data to index.
   :type data: numpy.ndarray
   :param indexes: E.g., ([None, [1, 2, 3], None, [20]]), where each element can be
                   None, a list, or a numpy.ndarray. If None, take all on the axis.

   :returns: Indexed data.
   :rtype: numpy.ndarray















   ..
       !! processed by numpydoc !!

.. py:function:: take_indices_over_axis(data: numpy.ndarray, axis: int, index: Union[numpy.ndarray, List[int]])

   
   Take indices along an axis.

   :param data: Data from which to take.
   :type data: numpy.ndarray
   :param axis: Axis from which to take.
   :type axis: int
   :param index: Array/list of indices to take along the axis.
   :type index: numpy.ndarray or list of int















   ..
       !! processed by numpydoc !!

